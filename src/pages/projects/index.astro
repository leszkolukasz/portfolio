---
import PageLayout from "@/layouts/BaseLayout.astro"
import Button from "@/components/Button.astro"
import ProjectCard from "@/components/ProjectCard.astro"
import type { Project, SiteMeta } from "@/types"
import { SKILLS } from "src/constants"

const meta: SiteMeta = {
  title: "Projects",
  description: "Projects I've worked on",
}

const projects: Project[] = [
  {
    title: "Training 1.58bit LLMs via Distillation - paper",
    description:
      "Mini-paper on training 1.58bit LLMs via distillation. It explores the effectiveness of distillation using different quantization methods, such as those introduces in papers: OneBit, BitNet and FBI and compares them with 1bit quantization.",
    href: "https://github.com/leszkolukasz/training-1.58bit-llms-via-distillation",
    skills: [SKILLS["python"], SKILLS["pytorch"], SKILLS["huggingface"]],
  },
  {
    title: "Type Safe Tensors - Haskell library",
    description:
      "Pure Haskell tensor library inspired by PyTorch. It provides type-safe N-dimensional tensors, broadcasting, neural network building blocks, and more, all with type-level shape tracking.",
    href: "https://github.com/leszkolukasz/type-safe-tensors",

    skills: [SKILLS["haskell"]],
  },
  {
    title: "TACACS - protocol implementation with correctness proofs",
    description:
      "Implementation of the TACACS protocol in Coq and Ocaml. According to the RFC1492.",
    href: "https://github.com/leszkolukasz/tacacs-coq",
    skills: [SKILLS["ocaml"], SKILLS["rocq"]],
  },
  {
    title: "Kava - programming language",
    description:
      "Programming language inspired by Kotlin with elements borrowed from Java and JavaScript. It is statically typed, interpreted, and supports functions as first-class citizens.",
    href: "https://github.com/leszkolukasz/kava-programming-language",
    skills: [SKILLS["haskell"]],
  },
  {
    title: "Latte - programming language",
    description:
      "Imperative language, almost a subset of Java. It is statically typed, compiled, and supports object-oriented programming.",
    href: "https://github.com/leszkolukasz/latte-compiler",
    skills: [SKILLS["haskell"], SKILLS["rust"]],
  },
]
---

<PageLayout meta={meta}>
  <div class="w-full">
    <Button title="Back" href="/" style="button">
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="14"
        height="14"
        viewBox="0 0 24 24"
        slot="icon-before"
      >
        <path
          fill="currentColor"
          d="m6.921 12.5l5.792 5.792L12 19l-7-7l7-7l.713.708L6.921 11.5H19v1z"
        >
        </path>
      </svg>
    </Button>

    <div class="mt-10 flex w-full flex-col gap-y-10">
      <h1 class="mb-1 text-2xl font-bold">Projects</h1>
      <div class="flex flex-col flex-wrap justify-start gap-x-6 gap-y-6 sm:flex-row">
        {
          projects.map((project) => (
            <ProjectCard
              href={project.href}
              heading={project.title}
              subheading={project.description}
              image={project.image}
              altText={project.title}
              skills={project.skills}
              class="w-full sm:w-[calc(50%-0.75rem)]"
            />
          ))
        }
      </div>
    </div>
  </div>
</PageLayout>
